# -*- coding: utf-8 -*-
"""CIFAR.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1QUkqNGSmS68iHEiWRIkN0t3C-c_TZnFf
"""

import tensorflow as tf
from tensorflow import keras
from keras import layers
from keras.datasets import cifar10
import numpy as np
import matplotlib.pyplot as plt

"""Obuchayushaya vyborka"""

(x_train, y_train), (x_test, y_test) = cifar10.load_data()

x_train = x_train.astype("float32")/255.0
x_test = x_test.astype("float32")/255.0

model = keras.Sequential(
    [
        keras.Input(shape=(32,32,3)),
        layers.Conv2D(32, 3, padding = 'valid', activation='relu'),
        layers.MaxPooling2D(pool_size = (2,2)),
        layers.Conv2D(64, 3, activation='relu'),
        layers.MaxPooling2D(pool_size = (2,2)),
        layers.Conv2D(128, 3, activation='relu'),
        layers.Flatten(),
        layers.Dense(64, activation='relu'),
        layers.Dense(10),
    ]
)

model.compile(
    loss=keras.losses.SparseCategoricalCrossentropy(from_logits=True),
    optimizer=keras.optimizers.Adam(lr=3e-4),
    metrics=["accuracy"]
)

#model_summary()
model.fit(x_train, y_train, epochs=10, verbose=2)
model.evaluate(x_test, y_test, verbose=2)

class_names = ['airplanes', 'cars', 'birds', 'cats', 'deer', 'dogs', 'frogs', 'horses', 'ships', 'trucks' ]
verdict = model.predict(x_test)
#print("Application %d predicting using train set %s result is %s" % (3,x_test.shape, verdicts.shape))
#for i in range(10):
   #print(numpy.argmax(verdict[i]))

plt.figure(figsize = (25,25))
for i in range(100):
  plt.subplot(10,10,i+1)
  plt.xticks([])
  plt.yticks([])
  plt.imshow(x_test[i+100], cmap = plt.cm.binary)
  plt.xlabel(class_names[np.argmax(verdict[i+100])])

image=tf.keras.utils.load_img(
    '/content/2.jpg',
    target_size=(32, 32),
    interpolation='nearest',
    keep_aspect_ratio=False
    )

input_arr=keras.preprocessing.image.img_to_array(image)
input_arr=np.array([input_arr])

verdicts  = model.predict(input_arr)

if (np.argmax(verdicts)==1 or np.argmax(verdicts)==9):
  print('It might be a van')


for image_result in verdicts:
  print(np.argmax(image_result))

"""Как определить что это минивен, использовать датасеты с маркированными машинами моделями"""